function onOpen() 
{
  var spreadsheet = SpreadsheetApp.getActive();
  var menuItems = 
  [
    {name: 'Refresh Data Now', functionName: 'importWorkdayReport'},
  ];
  spreadsheet.addMenu('IT-Tools', menuItems);
}

function importWorkdayReport() {

// Error handling
  try {
    // URL of the Workday report CSV data
    var reportURL = 'URL_TO_WORKDAY_RAAS_REPORT';
  
    // Base64 encoded password (base64encode.org encode in format username:password)
    var b64password = 'Base64_Encrypted_Password';
    
    // Get the active spreadsheet
    var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();

    // Get the first sheet
    var sheet = spreadsheet.getSheets()[0];

    // Set the options for the URL fetch
    var urlFetchOptions = {
    "headers": {"Authorization": "Basic " + b64password},
    "muteHttpExceptions": true
    };

    // Get the RaaS report response
    var fetchResponse = UrlFetchApp.fetch(reportURL, urlFetchOptions);

    // Check for non 200 http response (eg. 500 error)
    if (fetchResponse.getResponseCode() != 200) {
      var errorMessage = ":appsscript: Apps Script Error: <https://docs.google.com/spreadsheets/d/sheetid|Workday Employee List Retrieve>\n" + 
                         "*Response Code*: `" + fetchResponse.getResponseCode() + "`\n" +
                         "*Error*: ```" + fetchResponse.getContentText() + "```\n";
                         

        var payload = {"text": errorMessage,

                "blocks": [
            {
              "type": "header",
              "text": {
                "type": "plain_text",
                "text": ":appsscript: Apps Script Error"
              }
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "Google Sheet: <https://docs.google.com/spreadsheets/d/sheetid|Workday Employee List Retrieve>"
              }
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": ":workday:*Check*: Confirm error by logging into report with credentials in 1Password for <https://my.1password.com/vaults/link|\"Workday RaaS Report (User Export for IT)\">"
              }
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": ":email: *Notify*: Company's Workday administrator team about this error in the \"User Export for IT\""
              }
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "*Response Code*: `" + fetchResponse.getResponseCode() + "`\n" +
                                "*Error*: ```" + fetchResponse.getContentText() + "```\n"
              }
            }
          ]

        };
        
        var options = {
          "method": "post",
          "contentType": "application/json",
          "payload": JSON.stringify(payload),
          "muteHttpExceptions": true
        };
      
        var webhookUrl = "https://hooks.slack.com/services/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";
        UrlFetchApp.fetch(webhookUrl, options);

        return
    }

    // Get the CSV data
    var csvData = fetchResponse.getContentText()

    // Clear the data in the sheet
    sheet.clearContents();
  
    // Parse the CSV data and write it to the sheet
    var parsedData = Utilities.parseCsv(csvData);
    sheet.getRange(1, 1, parsedData.length, parsedData[0].length).setValues(parsedData);

  } 

  // Send an error notification if there was an error was caught
  catch (error) {
   
    var errorMessage = ":appsscript: Apps Script Error: Workday Employee List Retrieve" + "Error message: " + 
    error.message + "\nStack trace: " + error.stack;

    var payload = {"text": errorMessage
    };
    
    var options = {
      "method": "post",
      "contentType": "application/json",
      "payload": JSON.stringify(payload),
      "muteHttpExceptions": true
    };
   
    var webhookUrl = "http://webhook.com";
    UrlFetchApp.fetch(webhookUrl, options);
    }


  
}
